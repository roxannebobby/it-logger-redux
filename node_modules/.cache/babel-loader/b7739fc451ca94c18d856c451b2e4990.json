{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR } from '../.actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport const logReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport default logReducer;","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/it-logger-redux/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","initialState","logs","current","loading","error","logReducer","state","action","type","payload","console"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,mBAAlD;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;AAOA,OAAO,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,QAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAFP;AAGNN,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKL,WAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAKD,SAAKJ,UAAL;AACCW,MAAAA,OAAO,CAACN,KAAR,CAAcG,MAAM,CAACE,OAArB;AACA,aAAO,EACN,GAAGH,KADG;AAENF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFR,OAAP;;AAID;AACC,aAAOH,KAAP;AApBF;AAsBA,CAvBM;AAyBP,eAAeD,UAAf","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR } from '../.actions/types';\r\n\r\nconst initialState = {\r\n\tlogs: null,\r\n\tcurrent: null,\r\n\tloading: false,\r\n\terror: null,\r\n};\r\n\r\nexport const logReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\r\n\t\tcase LOGS_ERROR:\r\n\t\t\tconsole.error(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default logReducer;\r\n"]},"metadata":{},"sourceType":"module"}